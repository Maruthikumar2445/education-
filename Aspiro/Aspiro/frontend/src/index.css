@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom fonts */
@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Inter:wght@300;400;500;600&display=swap');

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #000;
}

/* Model viewer styles */
model-viewer {
  width: 100%;
  height: 100%;
  background-color: transparent;
  --poster-color: transparent;
  --progress-bar-height: 3px;
  --progress-bar-color: #4f46e5;
  --progress-mask-color: #ffffff;
}

/* Container for model viewer */
.model-viewer-container {
  position: relative;
  overflow: hidden;
  border-radius: 12px;
  background: transparent;
  min-height: 400px;
  max-height: 600px;
  aspect-ratio: 16/9;
}

/* Progress bar customization */
model-viewer::part(default-progress-bar) {
  height: 3px;
  background: linear-gradient(90deg, #4f46e5 0%, #818cf8 50%, #4f46e5 100%);
  background-size: 200% 100%;
  animation: loading 2s infinite;
}

/* Hide default progress mask */
model-viewer::part(default-progress-mask) {
  display: none;
}

/* Custom loading animation */
@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Custom loader styles */
.model-loader {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  color: white;
}

/* Hotspot styling */
.Hotspot {
  background: white;
  border-radius: 32px;
  border: 0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  box-sizing: border-box;
  cursor: pointer;
  height: 24px;
  padding: 8px;
  position: relative;
  transition: opacity 0.3s;
  width: 24px;
}

.Hotspot:not([data-visible]) {
  background: transparent;
  border: 4px solid white;
  box-shadow: none;
  height: 32px;
  pointer-events: none;
  width: 32px;
}

.Hotspot:focus {
  outline: none;
}

.Hotspot > * {
  opacity: 1;
  transform: translateY(-50%);
}

/* Animation keyframes */
@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.5);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Custom scroll bar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #1e1e1e;
}

::-webkit-scrollbar-thumb {
  background: #4f46e5;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #818cf8;
}

/* Typography styles */
.font-serif {
  font-family: 'Playfair Display', serif;
}

.font-sans {
  font-family: 'Inter', sans-serif;
}

/* Button styles */
.button-primary {
  @apply bg-white text-indigo-900 px-6 py-2 rounded-full hover:bg-gray-100 transition-colors;
}

/* Gradient background */
.gradient-bg {
  @apply bg-gradient-to-br from-black via-indigo-900 to-indigo-800;
}

/* Responsive styles */
@media (max-width: 768px) {
  .model-viewer-container {
    min-height: 300px;
    max-height: 400px;
  }

  h1 {
    font-size: 2.5rem !important;
  }
}

@media (max-width: 480px) {
  .model-viewer-container {
    min-height: 200px;
    max-height: 300px;
  }

  h1 {
    font-size: 2rem !important;
  }
}

/* Animations */
.fade-in {
  animation: fadeIn 0.5s ease-in;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Model viewer interaction hints */
model-viewer::part(interaction-prompt) {
  --interaction-prompt-color: white;
  --interaction-prompt-opacity: 0.8;
  --min-hotspot-opacity: 0;
  animation: pulse 2s infinite;
}

/* Loading screen */
.loading-screen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: black;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.loading-spinner {
  width: 50px;
  height: 50px;
  border: 3px solid #4f46e5;
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
